require 'rake'
require 'rspec/core/rake_task'
require_relative 'db/config'
require_relative 'lib/catfactimporter'
require_relative 'lib/studentimporter'

desc "create the database"
task "db:create" do
   touch 'db/catfacts.sqlite3'
end

desc "drop the database"
task "db:drop" do
   rm_f 'db/catfacts.sqlite3'
end

desc "migrate the database (options: VERSION=x, VERBOSE=false, SCOPE=blog)."
task "db:migrate" do
  ActiveRecord::Migrator.migrations_paths << File.dirname(__FILE__) + 'db/migrate'
  ActiveRecord::Migration.verbose = ENV["VERBOSE"] ? ENV["VERBOSE"] == "true" : true
  ActiveRecord::Migrator.migrate(ActiveRecord::Migrator.migrations_paths, ENV["VERSION"] ? ENV["VERSION"].to_i : nil) do |migration|
    ENV["SCOPE"].blank? || (ENV["SCOPE"] == migration.scope)
  end
end

desc "populate the catfacts database with catfacts AND populate the student database with student data"
task "db:populate" do
   StudentImporter.import
   CatFactImporter.import
end

desc "rollback your migration--use STEPS=number to step back multiple times"
task "db:rollback" do
  steps = (ENV['STEPS'] || 1).to_i
  ActiveRecord::Migrator.rollback('db/migrate', steps)
  Rake::Task['db:version'].invoke if Rake::Task['db:version']
end

desc "launch an irb session with links to all of the tables"
task "console" do
  exec "irb -rubygems -I lib -r ./db/config.rb"
end

desc 'Retrieves the current schema version number'
task "db:version" do
  puts "Current version: #{ActiveRecord::Migrator.current_version}"
end

desc 'Start IRB with application environment loaded'
task "console" do
  exec "irb -r./db/config"
end

desc 'Start spamming cohort with cat facts.'
task "db:spam" do
  puts "Starting Cat Fact spam!"
  exec 'ruby ./app/controller/cat_fact_mailer.rb'
end

desc 'Send a Text to random Student'
task "db:text" do
  puts "Sending Cat Fact Text!"
  exec 'ruby ./app/controller/cat_fact_texter.rb'
end

desc "Run the specs"
RSpec::Core::RakeTask.new(:specs)

task :default  => :specs
